---
# tasks file for flask_app
- name: install nginx service definition
  template:
    src: flask_app.conf
    dest: /etc/nginx/conf.d/flask_app.conf
    mode: 0640
    owner: root
    group: root
    setype: httpd_config_t
  notify: restart nginx

- name: ensure we can manage selinux
  package:
    name: libsemanage-python
    state: latest

- name: enable proxy pass connections in selinux
  seboolean:
    name: httpd_can_network_connect
    persistent: yes
    state: yes

- name: install virtualenv package
  package:
    name: python-virtualenv
    state: latest

- name: install pip package
  package:
    name: python2-pip
    state: latest

- name: create virtualenv application environment
  pip:
    name: "{{ item }}"
    virtualenv: "{{ flask_app_path }}/venv"
    virtualenv_site_packages: no
  with_items:
    - pip
    - flask
    - gunicorn

- name: "add {{ flask_user }} user account"
  user:
    name: "{{ flask_user }}"
    createhome: no
    home: "{{ flask_app_path }}"

- name: install gunicorn app module
  copy:
    src: flask_app_wsgi_module.py
    dest: "{{ flask_app_path }}/flask_app_wsgi_module.py"
    owner: root
    group: "{{ flask_user }}"
    mode: 0644
  notify:
    - restart gunicorn
    - restart nginx

- name: install flask_app
  copy:
    src: flask_app.py
    dest: "{{ flask_app_path }}/flask_app.py"
    owner: root
    group: "{{ flask_user }}"
    mode: 0644
  notify:
    - restart gunicorn
    - restart nginx

- name: install gunicorn systemd unit file
  template:
    src: gunicorn.service
    dest: /etc/systemd/system/gunicorn.service
    owner: root
    group: root
    mode: 0664
  register: gunicorn_unit_change
  notify:
    - reload gunicorn unit file
    - restart gunicorn

- name: start gunicorn
  service:
    name: gunicorn
    state: started
